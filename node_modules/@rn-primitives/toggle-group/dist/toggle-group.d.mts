import * as react_native from 'react-native';
import { View } from 'react-native';
import * as React from 'react';
import { RootProps, ItemProps } from './index.mjs';
import './toggle-group';
import '@rn-primitives/types';

declare const Root: React.ForwardRefExoticComponent<RootProps & React.RefAttributes<View>>;
declare function useRootContext(): RootProps;
declare const Item: React.ForwardRefExoticComponent<Omit<react_native.PressableProps & React.RefAttributes<View>, "ref"> & {
    asChild?: boolean;
} & {
    onKeyDown?: (ev: React.KeyboardEvent) => void;
    onKeyUp?: (ev: React.KeyboardEvent) => void;
} & {
    value: string;
} & React.RefAttributes<View>>;
declare function useItemContext(): ItemProps;
declare const utils: {
    getIsSelected(value: string | string[] | undefined, itemValue: string): boolean;
    getNewSingleValue(originalValue: string | string[] | undefined, itemValue: string): string | undefined;
    getNewMultipleValue(originalValue: string | string[] | undefined, itemValue: string): string[];
};

export { Item, Root, useItemContext, useRootContext, utils };
