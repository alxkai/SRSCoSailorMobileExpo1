'use client'

// src/progress.tsx
import * as Slot from "@rn-primitives/slot";
import * as React from "react";
import { View as View2 } from "react-native";
var DEFAULT_MAX = 100;
var Root = React.forwardRef(
  ({ asChild, value: valueProp, max: maxProp, getValueLabel = defaultGetValueLabel, ...props }, ref) => {
    const max = maxProp ?? DEFAULT_MAX;
    const value = isValidValueNumber(valueProp, max) ? valueProp : 0;
    const Component = asChild ? Slot.View : View2;
    return <Component
      role='progressbar'
      ref={ref}
      aria-valuemax={max}
      aria-valuemin={0}
      aria-valuenow={value}
      aria-valuetext={getValueLabel(value, max)}
      accessibilityValue={{
        min: 0,
        max,
        now: value,
        text: getValueLabel(value, max)
      }}
      {...props}
    />;
  }
);
Root.displayName = "RootProgress";
var Indicator = React.forwardRef(({ asChild, ...props }, ref) => {
  const Component = asChild ? Slot.View : View2;
  return <Component ref={ref} role='presentation' {...props} />;
});
Indicator.displayName = "IndicatorProgress";
function defaultGetValueLabel(value, max) {
  return `${Math.round(value / max * 100)}%`;
}
function isValidValueNumber(value, max) {
  return typeof value === "number" && !isNaN(value) && value <= max && value >= 0;
}
export {
  Indicator,
  Root
};
