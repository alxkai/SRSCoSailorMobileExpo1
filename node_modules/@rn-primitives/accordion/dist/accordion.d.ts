import * as _rn_primitives_types from '@rn-primitives/types';
import * as react_native from 'react-native';
import { View } from 'react-native';
import * as React from 'react';
import { RootProps, RootContext, ItemProps } from './index.js';
import './accordion';

declare const Root: React.ForwardRefExoticComponent<RootProps & React.RefAttributes<View>>;
declare function useRootContext(): RootContext;
type AccordionItemContext = ItemProps & {
    nativeID: string;
    isExpanded: boolean;
};
declare const AccordionItemContext: React.Context<AccordionItemContext | null>;
declare const Item: React.ForwardRefExoticComponent<{
    value: string;
    disabled?: boolean;
} & react_native.ViewProps & {
    asChild?: boolean;
} & React.RefAttributes<View>>;
declare function useItemContext(): AccordionItemContext;
declare const Header: React.ForwardRefExoticComponent<react_native.ViewProps & {
    asChild?: boolean;
} & React.RefAttributes<View>>;
declare const Trigger: React.ForwardRefExoticComponent<Omit<react_native.PressableProps & React.RefAttributes<View>, "ref"> & {
    asChild?: boolean;
} & {
    onKeyDown?: (ev: React.KeyboardEvent) => void;
    onKeyUp?: (ev: React.KeyboardEvent) => void;
} & React.RefAttributes<View>>;
declare const Content: React.ForwardRefExoticComponent<_rn_primitives_types.ForceMountable & react_native.ViewProps & {
    asChild?: boolean;
} & React.RefAttributes<View>>;

export { Content, Header, Item, Root, Trigger, useItemContext, useRootContext };
