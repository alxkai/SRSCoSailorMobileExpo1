'use client'
"use strict";
var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  // If the importer is in node compatibility mode or this is not an ESM
  // file that has been converted to a CommonJS file using a Babel-
  // compatible transform (i.e. "__esModule" has not been set), then set
  // "default" to the CommonJS "module.exports" for node compatibility.
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
  mod
));
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/table.tsx
var table_exports = {};
__export(table_exports, {
  Body: () => Body,
  Cell: () => Cell,
  Footer: () => Footer,
  Head: () => Head,
  Header: () => Header,
  Root: () => Root,
  Row: () => Row
});
module.exports = __toCommonJS(table_exports);
var Slot = __toESM(require("@rn-primitives/slot"));
var React = __toESM(require("react"));
var import_react_native = require("react-native");
var Root = React.forwardRef(({ asChild, ...props }, ref) => {
  const Component = asChild ? Slot.View : import_react_native.View;
  return <Component role='table' ref={ref} {...props} />;
});
Root.displayName = "RootTable";
var Header = React.forwardRef(({ asChild, ...props }, ref) => {
  const Component = asChild ? Slot.View : import_react_native.View;
  return <Component role='rowheader' ref={ref} {...props} />;
});
Header.displayName = "HeaderTable";
var Row = React.forwardRef(({ asChild, ...props }, ref) => {
  const Component = asChild ? Slot.Pressable : import_react_native.Pressable;
  return <Component ref={ref} role='row' {...props} />;
});
Row.displayName = "RowTable";
var Head = React.forwardRef(({ asChild, ...props }, ref) => {
  const Component = asChild ? Slot.View : import_react_native.View;
  return <Component ref={ref} role='columnheader' {...props} />;
});
Head.displayName = "HeadTable";
var Body = React.forwardRef(({ asChild, ...props }, ref) => {
  const Component = asChild ? Slot.View : import_react_native.View;
  return <Component ref={ref} role='rowgroup' {...props} />;
});
Body.displayName = "BodyTable";
var Cell = React.forwardRef(({ asChild, ...props }, ref) => {
  const Component = asChild ? Slot.View : import_react_native.View;
  return <Component ref={ref} role='cell' {...props} />;
});
Cell.displayName = "CellTable";
var Footer = React.forwardRef(({ asChild, ...props }, ref) => {
  const Component = asChild ? Slot.View : import_react_native.View;
  return <Component ref={ref} role='rowgroup' {...props} />;
});
Footer.displayName = "FooterTable";
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  Body,
  Cell,
  Footer,
  Head,
  Header,
  Root,
  Row
});
